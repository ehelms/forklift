---
- hosts: localhost
  gather_facts: no
  vars:
    minishift: true
    cluster_up: false
    project_name: pulp
    deployment_state: present
  pre_tasks:
    - shell: minishift ip
      register: minishift_ip

    - set_fact:
        application_hostname: "pulp.{{ minishift_ip.stdout }}.nip.io"

    - name: 'Login as system:admin'
      command: oc login -u system:admin

    - name: 'RBAC'
      k8s:
        state: "{{ deployment_state }}"
        definition: "{{ lookup('template', 'pulp-operator/deploy/clusterrole.yaml') | from_yaml }}"

    - name: 'RBAC'
      k8s:
        state: "{{ deployment_state }}"
        definition: "{{ lookup('template', 'pulp-operator/deploy/clusterrolebinding.yaml') | from_yaml }}"

    - name: 'CRD'
      command: oc create -f pulp-operator/deploy/crd.yaml
      ignore_errors: true

    - name: 'Developer RBAC'
      command: oc create -f pulp-operator/deploy/developer-rbac.yaml
      ignore_errors: true

    - name: Add anyuid scc to anyuid service account
      command: oc adm policy add-scc-to-user anyuid system:serviceaccount:{{ project_name }}:{{project_name }}-anyuid
      when: minishift or cluster_up

    - name: Add anyuid scc to pulp-operator
      command: oc adm policy add-scc-to-user anyuid system:serviceaccount:{{ project_name }}:pulp-operator
      when: minishift or cluster_up

    - name: 'Login as system:admin'
      command: oc login -u developer

    - name: project pulp (workaround for https://github.com/ansible/ansible/issues/42116)
      shell: "oc new-project '{{ project_name }}' --description=\"{{ project_name }} Stack\" --display-name=\"{{ project_name }}\" || oc get project '{{ project_name }}'"

    - name: 'service account'
      k8s:
        state: "{{ deployment_state }}"
        definition: "{{ lookup('template', 'pulp-operator/deploy/pulp-operator.serviceaccount.yaml') | from_yaml }}"

    - name: 'operator'
      k8s:
        state: "{{ deployment_state }}"
        definition: "{{ lookup('template', 'pulp-operator/deploy/operator.yaml') | from_yaml }}"

    - name: 'pulp custom resource'
      k8s:
        state: "{{ deployment_state }}"
        definition: "{{ lookup('template', 'pulp-cr.yaml') | from_yaml }}"
